class Solution
{
    
    //Function to find the minimum number of swaps required to sort the array.
    public int minSwaps(int nums[])
    {
        // int temp[]=new int[nums.length];
        HashMap<Integer,Integer> hm=new HashMap<>();
        int N=nums.length;
        int[] temp = Arrays.copyOfRange(nums, 0, N);
        
        Arrays.sort(temp);
        for(int i=0;i<nums.length;i++)
        {
            hm.put(nums[i],i);
        }
        int ans=0;
        for(int i=0;i<nums.length;i++)
        {
            if(nums[i]!=temp[i])
            {
                ans++;
                int val=nums[i];
                swap(nums,i,hm.get(temp[i]));
                hm.put(val,hm.get(temp[i]));
                hm.put(temp[i],i);
            }
        }
        return ans;
    }
    public void swap(int nums[],int i,int j)
    {
        int t=0;
        t=nums[i];
        nums[i]=nums[j];
        nums[j]=t;
    }
}