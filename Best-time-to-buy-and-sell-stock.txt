class Solution 
{
    public int[] nextGreaterElement(int[] nums1, int[] nums2) 
    {
        
        Stack<Integer> st=new Stack<>();
        HashMap<Integer,Integer> map=new HashMap<>();
        
        for(int i=nums2.length-1;i>=0;i--)
        {
            while(st.size()>0 && st.peek()<nums2[i])
            {
                st.pop();
            }
            if(st.size()==0)
            {
                map.put(nums2[i],-1);
            }
            else
            {
                map.put(nums2[i],st.peek());
            }
            st.push(nums2[i]);
        }
        
        for(int i=0;i<nums1.length;i++)
        {
            nums1[i]=map.get(nums1[i]);
        }
        
        return nums1;
        
    }
}



Testcases

1) Input: prices = [7,1,5,3,6,4]
Output: 5
Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.
Example 2:

2) Input: prices = [7,6,4,3,1]
Output: 0
Explanation: In this case, no transactions are done and the max profit = 0.